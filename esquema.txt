-- Roles y usuarios
create table roles (
  id serial primary key,
  name text not null unique check (name in ('admin','tutor','student'))
);

create table users (
  id bigserial primary key,
  role_id int not null references roles(id),
  first_name text not null,
  last_name  text not null,
  email text not null unique,
  password_hash text not null,
  avatar_url text,
  status text not null default 'active' check (status in ('active','suspended')),
  created_at timestamptz not null default now()
);

-- Cursos, matrículas y asignación de tutores
create table courses (
  id bigserial primary key,
  code text not null unique,
  name text not null,
  description text,
  status text not null default 'active' check (status in ('active','archived')),
  created_at timestamptz not null default now()
);

create table enrollments (
  id bigserial primary key,
  user_id bigint not null references users(id),
  course_id bigint not null references courses(id),
  enrolled_at timestamptz not null default now(),
  unique (user_id, course_id)
);

create table tutor_courses (
  id bigserial primary key,
  tutor_id bigint not null references users(id),
  course_id bigint not null references courses(id),
  assigned_at timestamptz not null default now(),
  unique (tutor_id, course_id)
);

-- Materiales
create table materials (
  id bigserial primary key,
  course_id bigint not null references courses(id),
  title text not null,
  type text not null check (type in ('pdf','video','slide','other')),
  storage_url text not null,
  uploaded_by bigint not null references users(id),
  uploaded_at timestamptz not null default now()
);

-- Sesiones y reservas (transacciones clave)
create table tutoring_sessions (
  id bigserial primary key,
  course_id bigint not null references courses(id),
  tutor_id bigint not null references users(id),
  scheduled_at timestamptz not null,
  duration_min int not null check (duration_min between 15 and 240),
  platform text not null check (platform in ('meet','zoom','webrtc')),
  join_url text,
  status text not null default 'scheduled' check (status in ('scheduled','completed','canceled')),
  created_at timestamptz not null default now()
);

create table reservations (
  id bigserial primary key,
  session_id bigint not null references tutoring_sessions(id) on delete cascade,
  student_id bigint not null references users(id),
  reserved_at timestamptz not null default now(),
  status text not null default 'reserved' check (status in ('reserved','attended','no_show','canceled')),
  unique (session_id, student_id)
);

create table attendance (
  id bigserial primary key,
  reservation_id bigint not null unique references reservations(id) on delete cascade,
  check_in_at timestamptz,
  check_out_at timestamptz
);

-- Feedback/Calificaciones
create table ratings (
  id bigserial primary key,
  reservation_id bigint not null references reservations(id) on delete cascade,
  rater_id bigint not null references users(id),
  tutor_id bigint not null references users(id),
  course_id bigint not null references courses(id),
  stars int not null check (stars between 1 and 5),
  comment text,
  created_at timestamptz not null default now()
);

-- Foros
create table forums (
  id bigserial primary key,
  course_id bigint not null references courses(id),
  title text not null,
  created_by bigint not null references users(id),
  created_at timestamptz not null default now()
);

create table posts (
  id bigserial primary key,
  forum_id bigint not null references forums(id) on delete cascade,
  parent_post_id bigint references posts(id),
  author_id bigint not null references users(id),
  content text not null,
  created_at timestamptz not null default now()
);

-- Notificaciones + bitácora de actividad
create table notifications (
  id bigserial primary key,
  user_id bigint not null references users(id),
  type text not null,
  payload_json jsonb not null default '{}'::jsonb,
  read_at timestamptz,
  created_at timestamptz not null default now()
);

create table activity_log (
  id bigserial primary key,
  user_id bigint not null references users(id),
  entity_type text not null,
  entity_id bigint not null,
  action text not null,
  created_at timestamptz not null default now()
);

-- Índices para transacciones
create index idx_sessions_course_time on tutoring_sessions(course_id, scheduled_at);
create index idx_reservations_session on reservations(session_id);
create index idx_reservations_student on reservations(student_id);
create index idx_ratings_tutor on ratings(tutor_id);
create index idx_posts_forum_time on posts(forum_id, created_at);
